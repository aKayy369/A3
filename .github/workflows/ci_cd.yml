name: CI/CD - Test → Build → Deploy

on:
  push:
    branches: [ main ]   # 🚀 Runs on every push to main
  workflow_dispatch:      # 🧠 Can also be triggered manually

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/a3-app:latest

jobs:
  test:
    name: 🧪 Run Unit Tests
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧪 Run Tests
        run: python test.py

  build_and_push:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔑 Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 🏗️ Build Docker Image
        run: docker build -t "${{ env.IMAGE_NAME }}" .

      - name: 📤 Push Docker Image
        run: docker push "${{ env.IMAGE_NAME }}"

  deploy:
    name: 🚀 Deploy to AIT Traefik Server
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔐 SSH & Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          proxy_host: ${{ vars.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e

            echo "🔐 Logging into DockerHub..."
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            echo "📦 Pulling latest image..."
            docker pull "${{ env.IMAGE_NAME }}"

            echo "🧹 Cleaning old container..."
            docker stop a3-app || true && docker rm a3-app || true

            echo "🚀 Starting new container..."
            docker run -d --restart always -p 8060:80 \
              -e MLFLOW_TRACKING_URI="${{ secrets.MLFLOW_TRACKING_URI }}" \
              -e MLFLOW_TRACKING_USERNAME="${{ secrets.MLFLOW_TRACKING_USERNAME }}" \
              -e MLFLOW_TRACKING_PASSWORD="${{ secrets.MLFLOW_TRACKING_PASSWORD }}" \
              -e APP_MODEL_NAME="${{ secrets.APP_MODEL_NAME }}" \
              --name a3-app "${{ env.IMAGE_NAME }}"

            echo "✅ Deployment completed! Visit: http://${{ vars.HOST }}:8060"
